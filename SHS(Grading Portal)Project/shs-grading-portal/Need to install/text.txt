add_student.js
import db from '@/lib/db';
import bcrypt from 'bcryptjs';

export default async function handler(req, res) {
    if (req.method !== 'POST') {
        return res.status(405).json({ message: 'Method Not Allowed' });
    }

    try {
        const { fullname, email, username, password, phone_number, sex, grade, strand, section, date_of_birth, address } = req.body;

        // Ensure all required fields are provided
        if (!fullname || !email || !username || !password || !phone_number || !sex || !grade || !strand || !section || !date_of_birth || !address) {
            return res.status(400).json({ message: 'All fields are required' });
        }

        // Check if username or email already exists
        const [existingUser] = await db.execute("SELECT username FROM users WHERE username = ? OR email = ?", [username, email]);
        if (existingUser.length > 0) {
            return res.status(400).json({ message: 'Username or Email already exists' });
        }

        // Hash the password before saving
        const hashedPassword = await bcrypt.hash(password, 10);

        // Insert new student into the database
        const query = `
            INSERT INTO users (fullname, email, username, password, phone_number, sex, grade, strand, section, date_of_birth, address, usertype, status) 
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'user', 'active')
        `;

        await db.execute(query, [fullname, email, username, hashedPassword, phone_number, sex, grade, strand, section, date_of_birth, address]);

        return res.status(200).json({ message: 'Student added successfully' });
    } catch (error) {
        console.error('Database Error:', error);

        if (error.code === 'ER_DUP_ENTRY') {
            return res.status(400).json({ message: 'Duplicate entry: Email or Username already exists' });
        }

        return res.status(500).json({ message: 'Internal Server Error' });
    }
}


INSERT INTO `users` (`id`, `fullname`, `username`, `password`, `email`, `sex`, `grade`, `strand`, `usertype`, `status`, `created_at`, `address`, `date_of_birth`, `phone_number`, `section_id`) VALUES
(5, 'admin', 'admin', '$2b$10$nx7I9cRGB1ZmZVB9s2Xt5eRW14TNF7o3NPtTpvPomywO2G4fQola2', 'admin@gmail.com', 'Male', '', '', 'admin', 'active', '2025-03-13 13:41:14', '', NULL, NULL, NULL),